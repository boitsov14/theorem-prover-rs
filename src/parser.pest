variable      = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_ALPHANUMERIC | GREEK | "_")* }
function      = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_ALPHANUMERIC | GREEK | "_")* }
prop          = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_ALPHANUMERIC | GREEK | "_")* }
bdd_variable  = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_DIGIT | "_")* }
bdd_variables = _{ bdd_variable ~ ("," ~ bdd_variable)* }

term  = _{ function ~ "(" ~ terms ~ ")" | variable }
terms = _{ term ~ ("," ~ term)* }

predicate = _{ prop ~ ("(" ~ terms ~ ")")? }
true      = @{ "⊤" | ^"true" | ^"tautology" | ^"top" }
false     = @{ "⊥" | ^"false" | ^"contradiction" | ^"bottom" | ^"bot" }
primary   = _{ predicate | true | false | "(" ~ formula ~ ")" }
atom      = _{ unary_op* ~ primary }

unary_op = _{ not | qf }
qf       = _{ qf_op ~ bdd_variables }
qf_op    = _{ all | exists }
not      = @{ "¬" | "~" | ^"not" | ^"lnot" | ^"negation" | ^"neg" }
all      = @{ "∀" | "!" | ^"forall" | ^"all" }
exists   = @{ "∃" | "?" | ^"exists" | ^"ex" }

bin_op  = _{ and | or | implies | iff }
and     = @{ "∧" | "/\\" | "&&" | "&" | ^"and" | ^"land" | ^"wedge" }
or      = @{ "∨" | "\\/" | "||" | "|" | ^"or" | ^"lor" | ^"vee" }
implies = @{ "→" | "->" | "=>" | "-->" | "==>" | "⇒" | "to" | "implies" | "imply" | "imp" | "rightarrow" }
iff     = @{ "↔" | "<->" | "<=>" | "<-->" | "<==>" | "⇔" | "≡" | "iff" | "equivalent" | "equiv" | "leftrightarrow" }

formula  = _{ atom ~ (bin_op ~ atom)* }
formulas = _{ formula ~ ("," ~ formula)* }

sequent = _{ (formulas | "") ~ vdash ~ (formulas | "") }
vdash   = @{ "⊢" | "|-" | "├" | "┣" }

input = _{ SOI ~ (sequent | formula) ~ EOI }

WHITESPACE = _{ " " | NEWLINE }
