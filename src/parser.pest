variable       = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_ALPHANUMERIC | GREEK | "_")* }
function_name  = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_ALPHANUMERIC | GREEK | "_")* }
predicate_name = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_ALPHANUMERIC | GREEK | "_")* }
bdd_variable   = @{ (ASCII_ALPHA | GREEK) ~ (ASCII_DIGIT | "_")* }
bdd_variables  =  { bdd_variable ~ ("," ~ bdd_variable)* }

function = { function_name ~ "(" ~ terms ~ ")" }
term     = { function | variable }
terms    = { term ~ ("," ~ term)* }

predicate =  { predicate_name ~ ("(" ~ terms ~ ")")? }
p_true    = @{ "⊤" | ^"true" | ^"tautology" | ^"top" }
p_false   = @{ "⊥" | ^"false" | ^"contradiction" | ^"bottom" | ^"bot" }
primary   = _{ p_true | p_false | predicate | "(" ~ formula ~ ")" }
atom      = _{ unary_op* ~ primary }

unary_op = _{ not | qf }
qf       =  { (all | exists) ~ bdd_variables }
not      = @{ "¬" | "~" | ^"not" | ^"lnot" | ^"negation" | ^"neg" }
all      = @{ "∀" | "!" | ^"forall" | ^"all" }
exists   = @{ "∃" | "?" | ^"exists" | ^"ex" }

bin_op  = _{ and | or | implies | iff }
and     = @{ "∧" | "/\\" | "&&" | "&" | ^"and" | ^"land" | ^"wedge" }
or      = @{ "∨" | "\\/" | "||" | "|" | ^"or" | ^"lor" | ^"vee" }
implies = @{ "→" | "->" | "=>" | "-->" | "==>" | "⇒" | ^"to" | ^"implies" | ^"imply" | ^"imp" | ^"rightarrow" }
iff     = @{ "↔" | "<->" | "<=>" | "<-->" | "<==>" | "⇔" | "≡" | ^"iff" | ^"equivalent" | ^"equiv" | ^"leftrightarrow" }

formula = { atom ~ (bin_op ~ atom)* }

input_term    = _{ SOI ~ term ~ EOI }
input_formula = _{ SOI ~ formula ~ EOI }

WHITESPACE = _{ " " | NEWLINE }
